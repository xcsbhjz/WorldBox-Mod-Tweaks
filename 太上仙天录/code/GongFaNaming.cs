using System;
using System.Collections.Generic;
using UnityEngine;
using VideoCopilot.code.utils;

namespace VideoCopilot.code
{
    public static class GongFaNaming
    {
        // 玄幻名词词库 - 扩展版（500+个不重复词汇）
        private static readonly List<string> XuanHuanNouns = new List<string>
        {
            // 基础修炼类
            "练气", "锻体", "炼神", "修心", "养性", "培元", "固基",
            "凝神", "聚气", "化气", "凝气", "行气", "导气", "运气",
            "存神", "炼魂", "锻魄", "养神", "修魄", "炼体", "淬体",
            "伐骨", "洗髓", "换血", "易经", "锻筋", "炼骨", "筑基",
            "结丹", "化婴",
            
            // 元素控制类
            "御气", "控火", "御水", "御风", "御土", "御雷", "御木",
            "御金", "御冰", "御暗", "御光", "御影", "御音", "御电",
            "御风", "御火", "御水", "御土", "御木", "御金", "御冰",
            "御雷", "御光", "御暗", "御风", "御火", "御水", "御土",
            "御木", "御金", "御冰", "御雷", "御光", "御暗", "御风",
            "御火", "御水", "御土", "御木", "御金", "御冰", "御雷",
            "御光", "御暗", "御风", "御火", "御水", "御土", "御木",
            "御金", "御冰", "御雷", "御光", "御暗", "御风", "御火",
            
            // 特殊能力类
            "御毒", "御蛊", "御兽", "御虫", "御龙", "御凤", "麒麟",
            "玄武", "白虎", "朱雀", "青龙", "御鬼", "御妖", "御魔",
            "御佛", "御道", "御仙", "御神", "御冥", "御鬼", "御魂",
            "御魄", "御灵", "御精", "御气", "御神", "御念", "御意",
            "御思", "御想", "御感", "御知", "御觉", "御悟", "御慧",
            "御智", "御明", "御清", "御静", "御定", "御虚", "御空",
            
            // 天地自然类
            "御日", "御月", "御星", "御辰", "御天", "御地", "御山",
            "御川", "御海", "御河", "御江", "御湖", "御泉", "御池",
            "御云", "御雾", "御雨", "御雪", "御霜", "御露", "御霞",
            "御虹", "御风", "御雷", "御电", "御火", "御冰", "御寒",
            "御热", "御燥", "御湿", "御生", "御死", "御阴", "御阳",
            
            // 天地元气类
            "先天", "后天", "混沌", "鸿蒙", "太初", "太始", "太易",
            "太虚", "太极", "两仪", "三才", "四象", "五行", "六合",
            "七星", "八卦", "九宫", "十方", "天干", "地支", "阴阳",
            "刚柔", "动静", "聚散", "离合", "始终", "因果", "轮回",
            "转生", "涅槃", "寂灭", "重生", "造化", "演化", "生成",
            
            // 道德感悟类
            "道德", "自然", "无为", "不争", "守柔", "处下", "虚静",
            "守一", "抱朴", "归真", "见素", "寡欲", "去智", "绝学",
            "忘形", "忘利", "忘名", "忘心", "忘己", "无己", "无功",
            "无名", "无欲", "无知", "无求", "无念", "无想", "无心",
            "无私", "无我", "自然", "不争", "守柔", "处下",
            
            // 修炼状态类
            "入定", "出定", "坐忘", "冥想", "观想", "存思", "守一",
            "抱元", "守中", "胎息", "辟谷", "绝食", "断欲", "忘情",
            "舍念", "离相", "悟空", "证道", "合道", "得道", "成道",
            "化道", "融道", "孕道", "育道", "生道", "养道", "行道",
            "悟真", "修真", "养真", "全真", "守真", "抱真", "归真",
            
            // 神秘力量类
            "灵犀", "灵感", "灵性", "灵慧", "灵思",
            "灵觉", "灵知", "灵明", "灵清", "灵静", "灵定", "灵虚",
            "灵空", "灵无", "灵有", "灵生", "灵死", "灵阴", "灵阳",
            
            // 修真术语类
            "道基", "灵根", "仙骨", "道骨", "灵脉", "仙脉", "道脉",
            "气海", "丹田", "紫府", "识海", "泥丸", "黄庭", "玄关",
            "命门", "会阴", "百会", "祖窍", "人窍", "地窍", "天窍",
            "三花", "五气", "九劫", "雷劫", "火劫", "风劫", "心魔",
            "业火", "因果", "业障", "劫难", "灾劫", "杀劫", "情劫",
            
            // 特殊体质类
            "圣体", "神体", "仙体", "道体", "佛体", "魔体", "妖体",
            "鬼体", "冥体", "灵体", "元体", "道胎", "仙胎", "圣胎",
            "神胎", "佛胎", "魔胎", "妖胎", "鬼胎", "冥胎", "灵胎",
            "元胎", "混沌", "鸿蒙", "太初", "太始", "太易",
            "太虚", "太极", "两仪", "三才", "四象", "五行",
            
            // 特殊意境类
            "意境", "领域", "世界", "空间", "天地", "宇宙", "洪荒",
            "混沌", "鸿蒙", "太初", "太始", "太易", "太虚", "太极",
            "两仪", "三才", "四象", "五行", "六合", "七星", "八卦",
            "九宫", "十方", "天干", "地支", "阴阳", "刚柔", "动静",
            "聚散", "离合", "始终", "因果", "轮回", "转生", "涅槃",
            
            // 神秘符号类
            "符文", "符篆", "符咒", "符印", "符纹", "符阵", "符图",
            "阵图", "阵纹", "阵眼", "阵基", "阵旗", "阵盘", "阵石",
            "法印", "法诀", "法术", "法咒", "法符", "法篆", "法纹",
            "法阵", "法图", "道印", "道诀", "道法", "道咒", "道符",
            "道篆", "道纹", "道阵", "道图", "佛印", "佛诀", "佛法",
            
            // 其他修仙相关词汇
            "仙缘", "道缘", "佛缘", "魔缘", "妖缘", "鬼缘", "冥缘",
            "机缘", "福缘", "因果", "业报", "命运", "宿命", "业力",
            "愿力", 
        };

        // 获取随机的玄幻名词
        public static string GetRandomXuanHuanNoun()
        {
            if (XuanHuanNouns.Count == 0)
                return "练气";
            
            int index = UnityEngine.Random.Range(0, XuanHuanNouns.Count);
            return XuanHuanNouns[index];
        }

        // 根据功法层次生成功法名称
        public static string GenerateGongFaName(int gongFaLevel, string noun = null, string title = null)
        {
            // 如果没有提供名词，随机获取一个
            if (string.IsNullOrEmpty(noun))
                noun = GetRandomXuanHuanNoun();

            // 根据不同的功法层次生成不同格式的名称
            if (gongFaLevel == 0) // 炼炁阶：名词+法
            {
                return $"{noun}法";
            }
            else if (gongFaLevel == 1) // 道基阶：名词+功
            {
                return $"{noun}功";
            }
            else if (gongFaLevel == 2) // 紫府阶：前缀+名词+卷
            {
                // 直接使用传入的title作为前缀
                return $"{title}{noun}卷";
            }
            else if (gongFaLevel == 3) // 道胎阶：前缀+名词+书
            {
                // 直接使用传入的title作为前缀
                return $"{title}{noun}书";
            }
            else if (gongFaLevel == 4) // 元神阶：前缀+名词+经
            {
                // 直接使用传入的title作为前缀
                return $"{title}{noun}经";
            }
            else if (gongFaLevel == 5) // 法相阶：前缀+名词+道经
            {
                // 直接使用传入的title作为前缀
                return $"{title}{noun}道经";
            }
            else if (gongFaLevel == 6) // 羽化阶：前缀+名词+帝经
            {
                // 直接使用传入的title作为前缀
                return $"{title}{noun}帝经";
            }
            else if (gongFaLevel == 7) // 大道阶：前缀+名词+仙经
            {
                // 直接使用传入的title作为前缀
                return $"{title}{noun}仙经";
            }
            else
            {
                // 确保所有代码路径都有返回值
                return $"{noun}录";
            }
        }

        // 为角色生成对应的功法名称
        public static string GenerateGongFaNameForActor(Actor actor, string providedNoun = null, string oldName = null)
        {
            // 常量定义
            const string storedNameKey = "xiantu.current_gongfa_name"; // 与ActorExtensions.cs中的常量保持一致
            const string baseNounKey = "xiantu.gongfa_base_noun"; // 基础名词存储键
            const string lastLevelKey = "xiantu.gongfa_last_level"; // 上一次的功法层次存储键
            
            // 1. 确定当前功法层次
            float currentPoints = actor.GetGongFaDian();
            int gongFaLevel = DetermineGongFaLevel(currentPoints);
            
            // 获取上一次的功法层次
            actor.data.get(lastLevelKey, out int lastLevel, -1);
            
            // 2. 获取存储的当前功法名称和基础名词，用于继承
            // 优先使用传入的oldName参数
            string storedName = !string.IsNullOrEmpty(oldName) ? oldName : null;
            if (string.IsNullOrEmpty(storedName))
            {
                actor.data.get(storedNameKey, out storedName, null);
            }
            
            // 从专门存储的基础名词开始，确保能够正确继承
            string baseNoun = null;
            actor.data.get(baseNounKey, out string storedBaseNoun, null);
            
            string prefix = null;
            
            // 3. 优先使用已存储的基础名词
            if (!string.IsNullOrEmpty(storedBaseNoun))
            {
                baseNoun = storedBaseNoun;
            }
            // 4. 如果没有存储的基础名词，则尝试从旧名称中提取
            else if (!string.IsNullOrEmpty(storedName))
            {
                // 尝试从存储名称中提取基础名词
                if (storedName.EndsWith("法"))
                {
                    // 从炼炁阶名称中提取名词：XX法 -> XX
                    baseNoun = storedName.Substring(0, storedName.Length - 1);
                }
                else if (storedName.EndsWith("功"))
                {
                    // 从道基阶名称中提取名词：XX功 -> XX
                    baseNoun = storedName.Substring(0, storedName.Length - 1);
                }
                else if (storedName.EndsWith("卷"))
                {
                    // 从紫府阶名称中提取前缀和名词：XXYY卷 -> XX, YY
                    int lastVolumeIndex = storedName.LastIndexOf("卷");
                    string withoutVolume = storedName.Substring(0, lastVolumeIndex);
                    
                    // 找出前缀和基础名词的分隔点（假设前缀是2个字符）
                    if (withoutVolume.Length > 2)
                    {
                        string extractedPrefix = withoutVolume.Substring(0, 2);
                        baseNoun = withoutVolume.Substring(2);
                        
                        // 检查是否是有效的前缀
                        string[] titlePrefixes = GetTitlePrefixes();
                        if (System.Array.IndexOf(titlePrefixes, extractedPrefix) >= 0)
                        {
                            prefix = extractedPrefix; // 使用提取的前缀
                        }
                    }
                }
                else
                {
                    // 对于更高层次，尝试从名称中提取基础名词
                    // 移除各种后缀
                    string[] suffixes = { "书", "经", "道经", "帝经", "仙经" };
                    string tempName = storedName;
                    
                    foreach (string suffix in suffixes)
                    {
                        if (tempName.EndsWith(suffix))
                        {
                            tempName = tempName.Substring(0, tempName.Length - suffix.Length);
                            break;
                        }
                    }
                    
                    // 假设前缀是2个字符
                    if (tempName.Length > 2)
                    {
                        string extractedPrefix = tempName.Substring(0, 2);
                        baseNoun = tempName.Substring(2);
                        
                        // 检查是否是有效的前缀
                        string[] titlePrefixes = GetTitlePrefixes();
                        if (System.Array.IndexOf(titlePrefixes, extractedPrefix) >= 0)
                        {
                            prefix = extractedPrefix; // 使用提取的前缀
                        }
                    }
                }
            }
            
            // 5. 如果还是没有基础名词，使用提供的名词或生成新的名词
            if (string.IsNullOrEmpty(baseNoun))
            {
                baseNoun = providedNoun ?? GetRandomXuanHuanNoun();
            }
            
            // 6. 根据角色的修仙境界限制功法层次
            ApplyXianTuLevelRestrictions(actor, ref gongFaLevel);
            
            // 7. 确保基础名词被存储，无论当前是哪个层次
            actor.data.set(baseNounKey, baseNoun);
            
            // 8. 如果是紫府阶或更高阶且没有提取到前缀
            if (gongFaLevel >= 2 && string.IsNullOrEmpty(prefix))
            {
                // 紫府阶及以上：从预定义的前缀数组中随机选择不重复的前缀
                prefix = GetRandomTitlePrefix(storedName);
            }
            
            // 9. 保存当前的功法层次，用于检测下次层次变化
            actor.data.set(lastLevelKey, gongFaLevel);
            
            // 10. 生成最终的功法名称
            string finalName = "";
            
            if (gongFaLevel == -1)
            {
                // 凡俗阶：返回统一的名称，与ActorExtensions.cs中的GetGongFaName方法保持一致
                finalName = "练气残篇";
            }
            else if (gongFaLevel == 0)
            {
                // 炼炁阶：名词+法
                finalName = $"{baseNoun}法";
            }
            else if (gongFaLevel == 1)
            {
                // 道基阶：名词+功
                finalName = $"{baseNoun}功";
            }
            else if (gongFaLevel == 2)
            {
                // 紫府阶：前缀+名词+卷
                finalName = $"{prefix}{baseNoun}卷";
            }
            else
            {
                // 道胎阶及以上：使用通用的命名方法，传入前缀和基础名词
                finalName = GenerateGongFaName(gongFaLevel, baseNoun, prefix);
            }
            
            // 确保返回的名称不为空
            if (string.IsNullOrEmpty(finalName))
            {
                finalName = $"{baseNoun}法";
            }
            
            return finalName;
        }
        
        // 辅助方法：获取所有标题前缀数组
        private static string[] GetTitlePrefixes()
        {
            return new string[]
            {
        "混元","太初","太玄","太始","太易","太清","玉清","上清","虚无","混沌","金庭","玉虚","紫霄","青冥","玄黄","鸿蒙",
        "乾元","坤元","离火","坎水","震雷","巽风","艮山","兑泽","太极","两仪","四象","八卦","九宫","十方","无量","无极",
        "元始","道德","灵宝","长生","不死","永恒","不朽","不灭","天罡","地煞","紫微","勾陈","玄武","朱雀","青龙","白虎",
        "麒麟","凤凰","神龟","蛟龙","鲲鹏","饕餮","混沌","穷奇","梼杌","赑屃","狴犴","睚眦","椒图","蒲牢","螭吻","狻猊",
        "趴蝮","负屃","霸下","貔貅","朝天","黄泉","九泉","幽都","冥府","地府","阴曹","冥司","幽府","幽宫","冥宫","幽殿",
        "冥殿","幽狱","冥狱","幽牢","冥牢","幽界","冥界","幽壤","冥壤","幽泉","冥泉","幽渊","冥渊","幽壑","冥壑","幽海",
        "冥海","幽湖","冥湖","幽溪","冥溪","幽涧","冥涧","幽山","冥山","幽岩","冥岩","幽石","冥石","幽林","冥林","幽草",
        "冥草","幽花","冥花","幽鸟","冥鸟","幽兽","冥兽","幽魂","冥魂","幽灵","冥灵","幽鬼","冥鬼","幽神","冥神","幽吏",
        "冥吏","幽差","冥差","阎罗","阎王","判官","奈何","忘川","彼岸","三途","鬼门","黄泉","望乡","森罗","枉死","地狱",
        "寒狱","沸狱","剥皮","拔舌","铁树","盘狱","蒸狱","柱狱","刀狱","碓狱","裂狱","凌迟","斩狱","首狱","道藏","金简",
        "玉牒","金策","玉书","天书","堪舆","符玄","玄机","奥秘","灵泽","玄泽","天浆","甘泽","嘉澍","甘霖","膏雨","瑞雨",
        "祥雨","喜雨","廉纤","轻丝","跳珠","银竹","白雨","陵雨","暴雨","雷雨","风雨","霜雨","朝雨","暮雨","夜雨","东风",
        "南风","西风","北风","金风","朔风","花信","扶摇","灵籁","商风","暴风","疾风","霜露","雾霞","虹霓","雷电","云雪",
        "雹霰","雾凇","霜凇","冰凌","晴阴","晦明","霁雾","云开","雪霁","元日","元正","元春","元朔","岁首","岁旦","正旦",
        "正朝","新正","岁朝","端月","孟春","仲春","季春","春阳","阳春","三春","九春","韵节","淑节","苍灵",
        "清和","朱明","炎夏","三夏","九夏","槐序","长夏","季夏","炎节","朱节","孟秋","仲秋","金秋","金天","三秋","九秋",
        "素秋","商秋","商节","三冬","九冬","玄冬","嘉平","岁除","除夜","元夜","元宵","上元","寒食","清明","上巳",
        "端阳","重午","七夕","乞巧","中元","中秋","仲秋","月节","登高","重阳","重九","亚岁","琼浆","玉液","醍醐","流霞",
        "霞液","碧霞","紫云","白云","甘露","蓝英","绿华","嘉草","清友","瑶草","不夜","晚甘","王孙","余甘","苦口","云雾",
        "黄醅","白堕","壶觞","绿蚁","浊贤","忘忧","般若","扫愁","钓诗","曲秀","琼琚","琼瑶","琼玖","璆琳","琳琅","玉环",
        "玉瑛","玉琪","玉琦","玉璐","玉珂","玉瑾","玉瑜","玉瑗","玉璧","玉琮","玉璋","玉圭","玉璜","金钗","金簪","金珮",
        "金环","金玦","金钏","金镯","金珰","金瑛","金珂","金瑾","金瑜","银钗","银簪","银珮","银环",
        "银玦","银钏","银珂","珍珠","明珠","夜明","明月","辟寒","辟暑","辟尘",
        "羲和","望舒","青女","东君","飞廉","勾陈","螣蛇","朱雀","玄武","青龙","白虎","岁星","荧惑","镇星","太白","辰星",
        "天皇","地皇","人皇","玉皇","紫微","勾陈","后土","文昌","武曲","天枢","天璇","天玑","天权","玉衡","开阳","摇光",
        "太乙","太极","仙禄","神禄","仙籍","神籍","仙骨","神骨","仙心","神心","仙性","神性","仙缘","神缘","仙根","神根",
        "仙界","瑶天","玉坛","璇霄","丹台","云阶","月地","神霄","绛阙","仙山","楼阁","悬圃","阆风","玄都","紫府","玉楼",
        "玄室","瑶池","翠水","弱渊","仙洲","灵洲","神洲","仙岛","灵岛","神岛","仙山","灵山","神山","仙府","灵府","神府",
        "仙宫","灵宫","神宫","仙殿","灵殿","神殿","仙观","灵观","神观","仙坛","灵坛","神坛","仙祠","灵祠","神祠","仙洞",
        "灵洞","神洞","仙窟","灵窟","神窟","仙泉","灵泉","神泉","仙池","灵池","神池","仙涧","灵涧","神涧","仙芝","灵芝",
        "灵符","神符","沧溟","沧渊","沧瀛","洪溟","九溟","溟蒙","鹏溟","翠微","崇阿","峭崿","崔嵬","玉嶂","清瑶","寒晶",
        "云梦","甘露","元酒","青罗","天藏","孟津","云梦","星质","云根","山骨","岱舆","员峤","方壶","瀛洲","蓬莱","不周",
        "瑶界","瑶天","玉坛","阆苑","玄洲","炎洲","长州","元洲","流洲","生洲","凤麟","祖洲","昆仑","玄圃","瑶池","翠水",
        "弱水","神渊","灵渊","碧潭","紫渊","丹溪","玉涧","琼川","瑶溪","灵泉","玉泉","仙涧","神川","碧流","紫澜","苍澜",
        "玄涛","沧波","洪涛","惊涛","骇浪","狂澜","碧波","清澜","澄波","静波","流波","逝波","浩波","烟波","碧落","青冥",
        "坤灵","扶光","望舒","星汉","北辰","穹苍","玄穹","苍昊","丹曦","婵娟","银汉","绛河","玉宇","灵曜","大矩","方仪",
        "后土","坤仪","金轮","冰镜","琼钩","玉鉴","金蟾","冰轮","白榆","应星","云川","银湾","落晖","西景","夕晖","扶摇",
        "灵籁","商寒","轻丝","银竹","灵泽","陵雨","白雨","跳珠","玄泽","天鼓","霹雳","连鼓","神斧","霆霓","玉虎","列缺",
        "飞电","飞火","天笑","天闪","纤凝","碧烟","天波","岚霏","玉叶","雯华","虹霓","玉桥","天弓","帝弓","彩练","水桩",
        "文虹","旱龙","寒酥","玉絮","六出","凝雨","素尘","冷絮","玉尘","瑞白","青女","威屑","青文","山巾","流岚","浮岚",
        "岚烟","春阳","阳春","芳春","青春","艳阳","三春","九春","阳节","昭节","韵节","淑节","苍灵","玄夜","宵分","道衍",
        "仙穹","神墟","魔渊","圣垣","灵墟","真境","虚极","元冥","化境","道枢","仙宸","神庭","魔境","圣墟","灵渊","真玄",
        "虚穹","元霄","化枢","道寰","仙墟","神渊","魔垣","圣境","灵穹","真冥","虚渊","元宸","化墟","道境","仙渊","神垣",
        "魔穹","圣玄","灵冥","真渊","虚宸","元墟","化境","道玄","仙冥","神穹","魔渊","圣墟","灵宸","真墟","虚境","元玄",
        "化枢","道渊","仙穹","神墟","魔境","圣垣","灵虚","真境","虚极","元冥","化境","道枢","仙宸","神庭","魔渊","圣墟",
        "灵渊","真玄","虚穹","元霄","化枢","道寰","仙墟","神渊","魔垣","圣境","灵穹","真冥","虚渊","元宸","化墟","道境",
        "仙渊","神垣","魔穹","圣玄","灵冥","真渊","虚宸","元墟","化境","道玄","仙冥","羲和","望舒","金轮","冰镜","琼钩",
        "玉鉴","金蟾","冰轮","婵娟","桂魄","素娥","飞镜","银蟾","玉盘","玉弓","悬弓","大明","太阴","夕照","朝暾","角宿",
        "亢宿","氐宿","房宿","心宿","尾宿","箕宿","斗宿","牛宿","女宿","虚宿","危宿","室宿","壁宿","奎宿","娄宿","胃宿",
        "昴宿","毕宿","觜宿","参宿","井宿","鬼宿","柳宿","星宿","张宿","翼宿","轸宿","岁星","荧惑","镇星","太白","辰星",
        "北辰","勾陈","螣蛇","朱雀","玄武","青龙","白虎","天枢","天璇","天玑","天权","玉衡","开阳","摇光","紫微","文昌",
        "武曲","华盖","三台","太微","天市","天狼","南门","天津","星汉","银汉","绛河","银湾","云汉","天河","天汉","星桥",
        "穹苍","玄穹","苍昊","玉宇","碧落","青冥","九霄","九天","中天","天际","天陲","星野","分野","星躔","斗建","岁差",
        "星陨","飞星","彗星","孛星","客星","瑞星","妖星","合璧","连珠","五星","日月","日蚀","月蚀","天狗","食月","极光",
        "天河","斗转","北辰","众星","星罗","星天","星月","沉星","残月","神芝","灵玉","仙宝","灵宝","神宝","仙符","参商",
        "太乙","太一","太上","太阴","太阳","紫霄","碧霄","云霄","青霞","玄霄","九霄","丹霞","云岭","苍梧","昆仑","青城",
        "罗浮","终南","王屋","天台","崂山","龙虎","茅山","武当","崆峒","中条","华山","泰山","嵩山","衡山","恒山","九华",
        "黄山","庐山","雁荡","武夷","普陀","峨眉","五台","三清","玉虚","碧游","玄都","金庭","玉庭","紫庭","黄庭","青庭",
        "玄庭","神庭","道庭","仙庭","灵庭","金阙","玉阙","紫阙","青阙","玄阙","神阙","道阙","仙阙","灵阙","天阙","金章",
        "玉章","紫章","青章","玄章","神章","道章","仙章","灵章","天章","金篆","玉篆","紫篆","青篆","玄篆","神篆","道篆",
        "仙篆","灵篆","天篆","金台","玉台","紫台","青台","玄台","神台","道台","仙台","灵台","洞天","紫阳","青冥","玄元", 
        "玉清","灵虚","清虚","太玄","紫虚","玉虚","赤霄","玉玦","玉簪","玉钗","玉珮","玉佩","玉钏","玉镯","玉珰","圣王",
        "璇玑","内景","太祖","青莲","无定","三世","太极","八极","烛龙","禅音","灭魔","九阳","寒阴","灵蛇","封魂","困妖",
        "罗刹","灵宝","金阙","玄都","浮花","长春","雷电","狮啸","百里","菩提","困佛","困仙","无形","星枢","无妄","九转",
        "玄冥","困魔","霸王","七弦","火龙","希夷","绝情","封龙","望月","养神","分花","八脉","六阴","八目","帝女","灵猴",
        "清净","北斗","地仙","五阳","天罡","凤凰","戮魂","风雷","昆仑","天府","欢喜","护龙","空冥","东海","素问","禹余",
        "天山","凌虚","化骨","游身","叱灵","锁天","来去","无终","混天","洞玄","九华","天兵","遁甲","六虚","崆峒","东华",
        "素女","守龙","金玉","归藏","如意","雌雄","千里","逍遥","宝色","泰山","五火","万里","仙虎","辟邪","风火","修罗",
        "养龙","两仪","化血","天火","掠影","苍狼","一阳","少阳","戮佛","仙猿","养魂","普贤","金蛇","失魂","诛魔","化魂",
        "白虎","玉虚","洞虚","通身","轮回","涅槃","万花","天魔","灵悟","坐忘","天仙","终南","太乙","护魔","摄魂","三尸",
        "玄微","戮魔","锁魔","戮仙","百仙","琼花","九鼎","抱元","灵兔","白虹","应龙","浮光","四海","混沌","失魂","天宝",
        "长生","擒龙","轩辕","须弥","鴛鴦","太始","天蝉","烟雨","移星","柔云","异相","合欢","九曜","八方","昆吾","慈悲",
        "无根","大衍","狮吼","白玉","太初","问情","紫阳","金身","开碑","乘龙","元始","素银","光相","开弓","素光","冥河",
        "青云","点苍","九宫","三元","火元","太元","灵鹤","护神","百魔","照天","罗烟","灵龟","桃花","一元","玄门","晶炎",
        "离梦","五色","八卦","一字","迷仙","衡山","紫微","九阴","易筋","荡魔","擒龙","伏仙","地宝","守龙","炼虚","开山",
        "六弦","控鹤","听雪","枯荣","异相","莲华","七香","天魔","伏龙","护天","清微","紫霞","养仙","玄阴","定慧","白云",
        "三才","诛神","还魂","灵枢","狂龙","镇魔","南海","大赤","天师","北海","缠丝","困天","混世","炼气","纯阴","混元",
        "莲花","灵鳌","斩妖","黑木","青焰","千机","残虹","太一","朝元","封神","哀牢","六丁","太元","绝天","七煞","泣灵",
        "养魔","三危","八卦","归元","迷仙","碎玉","困神","无上","七杀","天地","子母","青花","太阴","万刃","三清","太行",
        "紫云","西海","仙鹤","南华","四海","蓬莱","神龙","定慧","万剑","芙蓉","修罗","金阙","七宝","无量","飞燕","沛然",
        "定海","炼血","古佛","黑石","无影","照天","通天","勾魂","百花","达摩","毒龙","焰光","七巧","极乐","日月","玄武",
        "九炼","罡风","灵丹","离尘","道德","五龙","百炼","陨玉","百合","灭神","华山","噬魂","五行","千钧","十方","长生",
        "五雷","飞渡","天照","上清","阴阳","浑元","两界","神火","截天","灭地","五阴","缥缈","大荒","戮天","天宫","紫霄",
        "四象","昇阳","摘星","玉清","无涯","三生","归一","少阴","度难","照妖","封魔","真武","静禅","迷踪","化煞","封仙",
        "玄天","鸿运","赤霄","百毒","化影","神宝","降魔","无为","般若","南斗","恒山","正气","问天","百灵","诛妖","金霞",
        "金砂","纯阳","伏天","九幽","无相","无色","霹雳","九天","太微","天青","担山","参合","地煞","玉京","阳神","武神",
        "诛妖","伏魔","七星","养志","寒风","缠丝","沛然"
            };
        }
        
        // 辅助方法：根据功法点确定功法层次
        public static int DetermineGongFaLevel(float currentPoints)
        {
            if (currentPoints >= 1000000) return 7;         // 大道阶
            if (currentPoints >= 500000) return 6;          // 羽化阶
            if (currentPoints >= 100000) return 5;          // 法相阶
            if (currentPoints >= 60000) return 4;           // 元神阶
            if (currentPoints >= 30000) return 3;           // 道胎阶
            if (currentPoints >= 10000) return 2;           // 紫府阶
            if (currentPoints >= 1000) return 1;            // 道基阶
            if (currentPoints >= 100) return 0;             // 炼炁阶
            return -1;                                      // 凡俗阶
        }
        
        // 辅助方法：根据角色的修仙境界限制功法层次
        // 已修改：不再对功法层次进行任何限制
        private static void ApplyXianTuLevelRestrictions(Actor actor, ref int gongFaLevel)
        {
            // 空实现，不再根据修仙境界限制功法层次
        }
        
        // 辅助方法：为紫府阶获取随机的标题前缀
        private static string GetRandomTitlePrefix(string storedName = null)
        {
            // 使用GetTitlePrefixes方法获取前缀数组
            string[] titlePrefixes = GetTitlePrefixes();
            
            // 如果有存储的名称，检查是否需要避免重复
            if (!string.IsNullOrEmpty(storedName))
            {
                // 过滤掉与存储名称中已存在的名词重复的选项
                List<string> availablePrefixes = new List<string>();
                foreach (string prefix in titlePrefixes)
                {
                    if (!storedName.Contains(prefix))
                    {
                        availablePrefixes.Add(prefix);
                    }
                }
                
                // 如果还有可用的前缀，从中随机选择一个
                if (availablePrefixes.Count > 0)
                {
                    return availablePrefixes[UnityEngine.Random.Range(0, availablePrefixes.Count)];
                }
            }
            
            // 如果没有存储的名称或所有前缀都已使用，就从完整数组中随机选择一个
            return titlePrefixes[UnityEngine.Random.Range(0, titlePrefixes.Length)];
            
        }
        }
    }